let Koa,Router,bodyParser,mongoose,api,createFakeDate;_ec5‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_ec5‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_ec5‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_ec5‍.w("mongoose",[["mongoose",["mongoose"],function(v){mongoose=v}]]);_ec5‍.w("./api",[["default",["api"],function(v){api=v}]]);_ec5‍.w("./createFakeData",[["default",["createFakeDate"],function(v){createFakeDate=v}]]);require('dotenv').config()








const {PORT, MONGO_URI} = process.env;

mongoose
.connect(MONGO_URI)
    .then(()=>{
        console.log('Connected to MongoDB')
    })
    .catch(e => {_ec5‍.g.console.error(e)})

const app = new Koa();
const router = new Router();

router.use('/api', api.routes());

app.use(bodyParser());

app.use(router.routes()).use(router.allowedMethods());

const port = PORT || 4000;
app.listen(port, () => {
    _ec5‍.g.console.log('Listening to port %d', port);
})